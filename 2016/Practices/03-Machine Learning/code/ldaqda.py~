import numpy as np
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis,QuadraticDiscriminantAnalysis

spk = np.loadtxt("../data/spike_counts.txt")
loc = np.loadtxt("../data/location_areas.txt")

print spk.shape, loc.shape

import random
l=spk.shape[0]
indx = np.random.permutation(l)
print indx[:5],indx[-5:]
tr=indx[:int(l*0.9)]
te=indx[int(l*0.9):]
print tr[:5], te[-5:]


ccc= LinearDiscriminantAnalysis()
ccc.fit(spk[tr,:],loc[tr])

pred=ccc.predict(spk[te,:])
truth= loc[te]
print np.sum(pred==truth)*1.0/len(truth) 

pred=ccc.predict(spk[tr,:])
print np.sum(pred==loc[tr])*1.0/len(loc[tr]) 


cc2= QuadraticDiscriminantAnalysis()
cc2.fit(spk[tr,:],loc[tr])

pred=cc2.predict(spk[te,:])
truth= loc[te]
print np.sum(pred==truth)*1.0/len(truth) 

pred=cc2.predict(spk[tr,:])
print np.sum(pred==loc[tr])*1.0/len(loc[tr]) 

